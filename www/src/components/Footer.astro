---
import userConfig from 'virtual:starlight/user-config';
import type { Props } from '@astrojs/starlight/props';
import { Icon } from '@astrojs/starlight/components';
import config from '../../config';

const slug = Astro.props.entry.slug;
const { lang, lastUpdated } = Astro.props;
const { template } = Astro.props.entry.data;
const editLink = userConfig.editLink.baseUrl;

let editUrl = Astro.props.editUrl;

// Change path for component source files
if (slug.startsWith("docs/component/")) {
  editUrl = new URL(
    `pkg/platform/src/components/${slug.replace("docs/component/", "")}.ts`, editLink
  );
}
// Change path for reference source files
else if (slug === "docs/reference/config") {
  editUrl = new URL("pkg/platform/src/config.ts", editLink);
}
else if (slug === "docs/reference/global") {
  editUrl = new URL("pkg/platform/src/global.d.ts", editLink);
}
else if (slug === "docs/reference/cli") {
  editUrl = new URL("cmd/sst/main.go", editLink);
}
else if (slug === "docs/examples") {
  editUrl = new URL("examples", editLink);
}
---

{
  template === "doc" && (
    <footer>
      <div class="meta sl-flex">
        <div>
          <a href={editUrl} class="sl-flex">
            <Icon name="pencil" size="1em" />
            Edit this page
          </a>
          <a href={`${config.github}/issues/new`} class="sl-flex">
            <Icon name="github" size="1em" />
            Find a bug? Open an issue
          </a>
          <a href={config.discord} class="sl-flex">
            <Icon name="discord" size="1em" />
            Join our Discord community
          </a>
        </div>
        <div>
          <p>
            Built with <a href={`${config.github}/tree/dev/www/sst.config.ts`}>Astro &amp; SST</a>
          </p>
          <p>
            Last updated â€”{' '}
            { lastUpdated && (
            <time datetime={lastUpdated.toISOString()}>
              {lastUpdated.toLocaleDateString(lang, { dateStyle: 'medium', timeZone: 'UTC' })}
            </time>
            )}
          </p>
          <p>
            &copy; {new Date().getFullYear()}&nbsp;<a href="https://anoma.ly">Anomaly Innovations</a>
          </p>
        </div>
      </div>
    </footer>
 )
}

<style>
  footer {
    margin-top: 3rem;
    border-top: 1px solid var(--divider-color);
  }
  .meta {
    gap: 0.75rem 3rem;
    justify-content: space-between;
    flex-wrap: wrap;
    margin-block: 3rem 1.5rem;
    font-size: var(--sl-text-sm);
  }
  @media (min-width: 30rem) {
    .meta {
      flex-direction: row;
    }
  }
  a, p {
    padding-block: 0.125rem;
  }
  a {
    gap: 0.4375rem;
    align-items: center;
    text-decoration: none;
    color: var(--color-text);
    font-size: var(--sl-text-sm);
  }
  a svg {
    opacity: var(--icon-opacity);
  }
  a:hover {
    color: var(--sl-color-text-accent);
  }
  p {
    color: var(--color-text-dimmed);
  }
  @media (min-width: 30rem) {
    p {
      text-align: right;
    }
  }
  p a {
    color: var(--color-text-dimmed);
  }
</style>
